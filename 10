给你一个字符串 s 和一个字符规律 p，请你来实现一个支持 '.' 和 '*' 的正则表达式匹配。 '.' 匹配任意单个字符 '*' 匹配零个或多个前面的那一个元素 所谓匹配，是要涵盖 整个 字符串 s的，而不是部分字符串。 
class Solution:
def isMatch(self, s, p):
"""
:type s: str
:type p: str
:rtype: bool
"""
in_str = s
pt = p

    if not pt:
        return not in_str

    first_match = bool(in_str) and pt[0] in {in_str[0], '.'}

    if len(pt) >= 2 and pt[1] == '*':
        return (self.isMatch(in_str, pt[2:])
                or first_match and self.isMatch(in_str[1:], pt))
    else:
        return first_match and self.isMatch(in_str[1:], pt[1:])
s = Solution()
print(s.isMatch("ab", "c*ab"))
