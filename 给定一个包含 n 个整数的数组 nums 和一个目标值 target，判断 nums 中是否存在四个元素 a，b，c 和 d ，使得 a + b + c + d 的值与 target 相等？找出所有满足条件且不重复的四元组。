class Solution:
def fourSum(self, nums, target):
"""
:type nums: List[int]
:type target: int
:rtype: List[List[int]]
"""
nums = sorted(nums)
res = []

    if not nums or len(nums) < 4:
        return res

    if nums[0] + nums[1] + nums[2] + nums[3] > target:
        return res

    if nums[-1] + nums[-2] + nums[-3] + nums[-4] < target:
        return res

    for i in range(0, len(nums)):
        if nums[i] + nums[-1] + nums[-2] + nums[-3] < target:
            continue
        for j in range(i + 1, len(nums) - 2):
            if nums[i] + nums[j] + nums[-2] + nums[-1] < target:
                continue
            x = j + 1
            y = len(nums) - 1
            while x < y:
                if nums[i] + nums[j] + nums[x] + nums[y] == target:
                    res.append([nums[i], nums[j], nums[x], nums[y]])
                    x = x + 1
                    while x < y and nums[x] == nums[x - 1]:
                        x = x + 1
                elif nums[i] + nums[j] + nums[x] + nums[y] < target:
                    x = x + 1
                else:
                    y = y - 1

    rr = []
    for r in res:
        if r not in rr:
            rr.append(r)
    return rr
